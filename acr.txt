# login command -ACR
az acr login --name <registry-name> #login server value 'azurecr.io'

# to create a ACR
az acr create --resource-group myResourceGroup --name $ACRNAME --sku Basic

# pull image from docker hub
docker pull <registry name>/<image name>

# tag the image before pushing to acr
docker tag <registry name>/<image name> <login server value>/<repo name><tag value>
# ex: docker tag mcr.microsoft.com/hello-world mycontainerregistry.azurecr.io/hello-world:v1

# push image to acr 
docker push <login server value>/<tag value>

# pull & run image from acr
docker run  <login server value>/<tag value>

# delete image from locally
docker rmi <registry name>/<image name>

# build docker file
docker build .
docker build -f <path to docker file>
docker build -t <user name>/<image name>

# doker login
docker login 

# list all images locally
docker images 

#get the status of image
docker ps

#tag image locally
docker image tag <container-id> <name>/<tag>

#tage image for docker hub
docker  tag <localimage-name> <repo-name>/<image name>:<tag>

#pull from docker
docker pull  <repo-name>/<image name>:<tag>

#run docker image locally
docker run -d --name <local-namefor-container> <repo-name>/<image name>:<tag> -p <port on host machine>:<port on app in container is running>

#to stop docker image from running
docker stop <container-id> or <container-name>

#to delete a image
docker rmi <repo-name>/<image name>:<tag>

# to build and run muuti container images
docker compose -f <path to compose file(yaml)> -d #-d is detached mode, seprated from terminal

#to stop multi container images
docker compose down
 
#to ceate a virtual network
docker network create myvnet

#connect an image to vnet
docker run -d --network <network name> <container name>

#expose a port
docker run -d -p <host port>:<container port> <conatiner name>

#create volume
docker volume create myvolume

#attach a colume to path when container start
docker run -d -p 80:80 -v myvolume:/logs:rw <container name>

#list volume 
docker volume ls

#delete volume
docker volume rm <volume name>

